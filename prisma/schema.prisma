// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  COMPANY_ADMIN
  SUPER
}

model People {
  id String @id @unique @default(cuid())

  email    String @unique
  password String

  firstName String
  lastName  String
  role      Role   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookmarked  Bookmarked?
  application Application[]
}

model Companies {
  id String @id @unique @default(cuid())

  name    String @unique
  email   String
  about   String
  address String
  phone   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Advertisement Advertisement[]
}

enum AdvertisementStatus {
  PENDING
  COMPLETED
  CANCELLED
  DRAFT
}

model Advertisement {
  id String @id @unique @default(cuid())

  title       String
  description String
  status      AdvertisementStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  componyAdvertisement Companies @relation(fields: [advertisementId], references: [id])
  advertisementId      String

  jobTitle Job    @relation(fields: [type], references: [name])
  type     String @unique

  bookmarked  Bookmarked[]
  application Application[]
}

model Bookmarked {
  id String @id @unique @default(cuid())

  people   People @relation(fields: [personId], references: [id])
  personId String @unique

  advertisement   Advertisement @relation(fields: [advertisementId], references: [id])
  advertisementId String
}

model Job {
  id String @id @unique @default(cuid())

  name        String @unique
  description String

  advertisement Advertisement[]
}

enum StatusApplication {
  PENDING
  ACCEPTED
  REJECTED
  DRAFT
}

model Application {
  id String @id @unique @default(cuid())

  resume String
  cover  String
  status StatusApplication @default(PENDING)

  advertisement   Advertisement @relation(fields: [advertisementId], references: [id])
  advertisementId String

  person   People @relation(fields: [personId], references: [id])
  personId String
}
